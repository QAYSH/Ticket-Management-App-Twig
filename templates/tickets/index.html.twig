{% extends "base.html.twig" %}

{% block content %}
<div class="min-h-screen flex flex-col bg-gray-50">
    <!-- Header -->
    <header class="bg-white border-b border-gray-200 sticky top-0 z-30">
        <div class="container-constrained py-4 px-4 sm:px-6">
            <div class="flex items-center justify-between flex-wrap gap-4">
                <!-- Left Section -->
                <div class="flex items-center gap-3 flex-shrink-0">
                    <a 
                        href="/dashboard"
                        class="inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-gray-700 rounded-md text-sm font-medium hover:bg-gray-50 transition-colors"
                    >
                        <svg class="h-4 w-4 mr-1 sm:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
                        </svg>
                        <span class="hidden sm:inline">Back</span>
                    </a>
                    <h1 class="text-xl sm:text-2xl font-bold truncate">Ticket Management</h1>
                </div>

                <!-- Right Section (Desktop) -->
                <div class="hidden sm:flex items-center gap-2">
                    <button onclick="openCreateForm()" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 transition-colors">
                        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                        </svg>
                        New Ticket
                    </button>
                    <a 
                        href="/auth/logout"
                        class="inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-gray-700 rounded-md text-sm font-medium hover:bg-gray-50 transition-colors"
                    >
                        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                        </svg>
                        Logout
                    </a>
                </div>

                <!-- Mobile Menu Button -->
                <div class="sm:hidden">
                    <button
                        onclick="toggleMobileMenu()"
                        class="inline-flex items-center p-2 border border-gray-300 bg-white text-gray-700 rounded-md text-sm font-medium hover:bg-gray-50 transition-colors"
                        aria-label="Toggle menu"
                    >
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Mobile Menu -->
            <div id="mobileMenu" class="mt-4 flex flex-col gap-3 sm:hidden hidden">
                <button onclick="openCreateForm()" class="inline-flex items-center justify-center px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 transition-colors">
                    <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                    </svg>
                    New Ticket
                </button>
                <a 
                    href="/auth/logout"
                    class="inline-flex items-center justify-center px-4 py-2 border border-gray-300 bg-white text-gray-700 rounded-md text-sm font-medium hover:bg-gray-50 transition-colors"
                >
                    <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                    </svg>
                    Logout
                </a>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="flex-1 py-8 sm:py-12">
        <div class="container-constrained">
            <!-- Tabs -->
            <div class="mb-8">
                <div class="grid grid-cols-2 sm:grid-cols-4 max-w-2xl mx-auto gap-1 bg-gray-100 rounded-lg p-1">
                    <button
                        onclick="setActiveTab('all')"
                        class="px-4 py-2 rounded-md text-sm font-medium transition-colors bg-white text-gray-900 shadow-sm"
                        id="tab-all"
                    >
                        All ({{ tickets|length }})
                    </button>
                    <button
                        onclick="setActiveTab('open')"
                        class="px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-500 hover:text-gray-900"
                        id="tab-open"
                    >
                        Open ({{ tickets|filter(t => t.status == 'open')|length }})
                    </button>
                    <button
                        onclick="setActiveTab('in_progress')"
                        class="px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-500 hover:text-gray-900"
                        id="tab-in_progress"
                    >
                        In Progress ({{ tickets|filter(t => t.status == 'in_progress')|length }})
                    </button>
                    <button
                        onclick="setActiveTab('closed')"
                        class="px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-500 hover:text-gray-900"
                        id="tab-closed"
                    >
                        Closed ({{ tickets|filter(t => t.status == 'closed')|length }})
                    </button>
                </div>
            </div>

            <!-- Content -->
            {% if tickets is empty %}
                <div class="text-center py-12 bg-white rounded-xl border border-gray-200">
                    <p class="text-gray-500 mb-4">
                        No tickets yet. Create your first ticket to get started!
                    </p>
                    <button 
                        onclick="openCreateForm()" 
                        class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 transition-colors"
                    >
                        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                        </svg>
                        Create Ticket
                    </button>
                </div>
            {% else %}
                <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6" id="tickets-container">
                    {% for ticket in tickets %}
                        {% include "tickets/components/ticket_card.html.twig" with {'ticket': ticket} %}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    </main>

    <!-- Create/Edit Ticket Modal -->
    <div id="ticketModal" class="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50 hidden">
        <div class="bg-white rounded-2xl shadow-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-semibold" id="modal-title">
                    Create New Ticket
                </h2>
            </div>
            {% include "tickets/components/ticket_form.html.twig" %}
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50 hidden">
        <div class="bg-white rounded-2xl shadow-lg max-w-md w-full p-6">
            <h3 class="text-lg font-semibold mb-2">Are you sure?</h3>
            <p class="text-gray-500 mb-6">
                This action cannot be undone. This will permanently delete the ticket.
            </p>
            <div class="flex gap-3 justify-end">
                <button onclick="closeDeleteModal()" class="px-4 py-2 border border-gray-300 bg-white text-gray-700 rounded-md text-sm font-medium hover:bg-gray-50 transition-colors">
                    Cancel
                </button>
                <button onclick="confirmDelete()" class="px-4 py-2 bg-red-600 text-white rounded-md text-sm font-medium hover:bg-red-700 transition-colors">
                    Delete
                </button>
            </div>
        </div>
    </div>

    <!-- Footer -->
    {% include "components/footer.html.twig" %}
</div>

<script>
let activeTab = 'all';
let ticketToDelete = null;

// Tab functionality
function setActiveTab(tab) {
    activeTab = tab;
    
    // Update tab styles
    document.querySelectorAll('[id^="tab-"]').forEach(tabElement => {
        tabElement.classList.remove('bg-white', 'text-gray-900', 'shadow-sm');
        tabElement.classList.add('text-gray-500', 'hover:text-gray-900');
    });
    
    const activeTabElement = document.getElementById(`tab-${tab}`);
    activeTabElement.classList.add('bg-white', 'text-gray-900', 'shadow-sm');
    activeTabElement.classList.remove('text-gray-500', 'hover:text-gray-900');
    
    // Filter tickets
    filterTickets();
}

function filterTickets() {
    const tickets = document.querySelectorAll('.ticket-card');
    tickets.forEach(ticket => {
        const status = ticket.dataset.status;
        const shouldShow = activeTab === 'all' || status === activeTab;
        ticket.style.display = shouldShow ? 'block' : 'none';
    });
}

// Modal functionality
function openCreateForm() {
    document.getElementById('modal-title').textContent = 'Create New Ticket';
    document.getElementById('ticket-form').reset();
    document.getElementById('ticket-id').value = '';
    document.getElementById('ticketModal').classList.remove('hidden');
    closeMobileMenu();
}

function openEditForm(ticketId, title, description, status) {
    document.getElementById('modal-title').textContent = 'Edit Ticket';
    document.getElementById('ticket-title').value = title;
    document.getElementById('ticket-description').value = description || '';
    document.getElementById('ticket-status').value = status;
    document.getElementById('ticket-id').value = ticketId;
    document.getElementById('ticketModal').classList.remove('hidden');
    closeMobileMenu();
}

function closeModal() {
    document.getElementById('ticketModal').classList.add('hidden');
}

function openDeleteModal(ticketId) {
    ticketToDelete = ticketId;
    document.getElementById('deleteModal').classList.remove('hidden');
    closeMobileMenu();
}

function closeDeleteModal() {
    ticketToDelete = null;
    document.getElementById('deleteModal').classList.add('hidden');
}

function confirmDelete() {
    if (ticketToDelete) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/tickets/${ticketToDelete}/delete`;
        document.body.appendChild(form);
        form.submit();
    }
}

// Mobile menu
function toggleMobileMenu() {
    const menu = document.getElementById('mobileMenu');
    menu.classList.toggle('hidden');
}

function closeMobileMenu() {
    document.getElementById('mobileMenu').classList.add('hidden');
}

// Close modals when clicking outside
document.getElementById('ticketModal')?.addEventListener('click', function(e) {
    if (e.target === this) closeModal();
});

document.getElementById('deleteModal')?.addEventListener('click', function(e) {
    if (e.target === this) closeDeleteModal();
});

// Initialize
document.addEventListener('DOMContentLoaded', function() {
    setActiveTab('all');
    
    {% if showCreateForm %}
        openCreateForm();
    {% endif %}
});
</script>
{% endblock %}